service: url-shortner # NOTE: update this with your service name

custom:
  config:
    db:
      user: 'postgres'
      pass: ''
      database: 'urlshortner'
      host : '127.0.0.1'
      dialect: 'postgres'

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:CreateBucket"
      Resource: 
        - "*"
    - Effect: "Allow"
      Action:
        - 'lambda:*'
      Resource:
        - "*"
  environment: 
    DB_USER: ${ssm:/url-shortner/${self:provider.stage}/db/user~true, self:custom.config.db.user}
    DB_PASSWORD: ${ssm:/url-shortner/${self:provider.stage}/db/pass~true, self:custom.config.db.pass}
    DB_DATABASE: ${ssm:/url-shortner/${self:provider.stage}/db/database~true, self:custom.config.db.database}
    DB_HOST: ${ssm:/url-shortner/${self:provider.stage}/db/host~true, self:custom.config.db.host}
    DB_DIALECT: ${ssm:/url-shortner/${self:provider.stage}/db/dialect~true, self:custom.config.db.dialect}
    ELASTIC_INDEX_NAME: ${self:service}

functions:
  shortener:
    handler: handler.shorten
    events:
      - http:
          path: /shorten
          method: post

  retriever:
    handler: handler.retreive
    events:
      - http:
          path: /retreive
          method: get
          
# following enables testing the function in local via
# $> serverless -- offline
plugins:
  - serverless-offline
